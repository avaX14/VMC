{"version":3,"sources":["containers/SocialAuth/constants.js","utils/parseApiErrorsToFormik.js","containers/SocialAuth/selectors.js","containers/SocialAuth/reducer.js","containers/RegisterPage/RegisterForm.js","components/FacebookButton/index.js","components/GoogleButton/index.js","containers/SocialAuth/saga.js","containers/SocialAuth/actions.js","containers/SocialAuth/index.js","containers/RegisterPage/constants.js","containers/RegisterPage/reducer.js","containers/RegisterPage/selectors.js","containers/RegisterPage/actions.js","containers/RegisterPage/saga.js","containers/RegisterPage/messages.js","containers/RegisterPage/index.js"],"names":["SOCIAL_AUTH","SOCIAL_AUTH_REQUEST","SOCIAL_AUTH_SUCCESS","SOCIAL_AUTH_ERROR","parseApiErrorsToFormik","errors","result","key","camelCase","selectSocialAuth","state","socialAuth","initialState","makeSelectIsSocialAuthPending","createSelector","substate","isPending","socialAuthReducer","action","produce","draft","type","RegisterForm","useForm","register","handleSubmit","console","log","onSubmit","data","className","translate","placeholder","name","ref","required","max","style","top","right","color","userName","maxLength","firstName","lastName","pattern","email","min","password","password2","companyName","companyTown","companyPhone","FacebookButton","callback","disabled","children","appId","config","social","facebookAppId","response","isDisabled","render","onClick","isProcessing","isSdkLoaded","GoogleButton","handleResponse","clientId","googleClientId","onSuccess","onFailure","cookiePolicy","props","socialAuthentication","registerSaga","accessToken","provider","call","request","url","method","token","put","setItem","setToken","fetchAuthenticatedUser","push","DASHBOARD","error","takeLatest","SocialAuth","facebookButtonText","googleButtonText","useInjectReducer","reducer","useInjectSaga","saga","dispatch","useDispatch","isSocialAuthPending","useSelector","handleSocilaNetworkResponse","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_ERROR","registerReducer","selectRegister","setErrors","meta","first_name","last_name","status","erorrs","scope","defineMessages","registerTitle","id","defaultMessage","registerButton","loginLink","facebookButton","googleButton","firstNameInputLabel","lastNameInputField","emailInputLabel","passwordInputLabel","RegisterPage","isRegisterPending","submitRegisterForm","useCallback","formatMessage","useIntl","renderPendingIndicator","messages","to","LOGIN"],"mappings":"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","file":"static/js/6.2212ccd9.chunk.js","sourcesContent":["export const SOCIAL_AUTH = '[Social Authentication]';\n\nexport const SOCIAL_AUTH_REQUEST = `${SOCIAL_AUTH} SOCIAL_AUTH_REQUEST`;\nexport const SOCIAL_AUTH_SUCCESS = `${SOCIAL_AUTH} SOCIAL_AUTH_SUCCESS`;\nexport const SOCIAL_AUTH_ERROR = `${SOCIAL_AUTH} SOCIAL_AUTH_ERROR`;\n","import camelCase from 'lodash/camelCase';\n\nexport default function parseApiErrorsToFormik(errors) {\n  let result = {};\n\n  for (let key in errors) {\n    result[camelCase(key)] = errors[key][0];\n  }\n\n  return result;\n}\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectSocialAuth = state => state.socialAuth || initialState;\n\nconst makeSelectIsSocialAuthPending = () =>\n  createSelector(\n    selectSocialAuth,\n    substate => substate.isPending\n  );\n\nexport { makeSelectIsSocialAuthPending };\n","import produce from 'immer';\nimport {\n  SOCIAL_AUTH_REQUEST,\n  SOCIAL_AUTH_SUCCESS,\n  SOCIAL_AUTH_ERROR\n} from './constants';\n\nexport const initialState = {\n  isPending: false\n};\n\n/* eslint-disable default-case */\nconst socialAuthReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case SOCIAL_AUTH_REQUEST:\n        draft.isPending = true;\n        break;\n      case SOCIAL_AUTH_SUCCESS:\n      case SOCIAL_AUTH_ERROR:\n        draft.isPending = false;\n        break;\n    }\n  });\n\nexport default socialAuthReducer;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { red } from '@material-ui/core/colors';\nimport translate from 'i18n/translate';\n\nexport default function RegisterForm() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(errors);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"register-form\">\n        <div className=\"mr-5\">\n          <h3 className=\"mb-4\">{translate('contactData')}</h3>\n\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"User name\"\n              name=\"userName\"\n              ref={register({ required: true, max: 30 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.userName && (\n              <p className=\"error-message\">{translate('requiredField')}</p>\n            )}\n          </div>\n\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"First name\"\n              name=\"firstName\"\n              ref={register({ required: true, maxLength: 80 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.firstName && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Last name\"\n              name=\"lastName\"\n              ref={register({ required: true, maxLength: 100 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.lastName && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.email && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.password && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              name=\"password2\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.password2 && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"tel\"\n              placeholder=\"Mobile number\"\n              name=\"Mobile number\"\n              ref={register({ maxLength: 15 })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"Title\"\n              ref={register}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Position\"\n              name=\"Position\"\n              ref={register({ max: 40 })}\n            />\n          </div>\n        </div>\n\n        <div className=\"verticalLine\"></div>\n\n        <div className=\"company-info ml-5\">\n          <h3 className=\"mb-4\">{translate('companyData')}</h3>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Ime kompanije\"\n              name=\"companyName\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.companyName && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Adresa\"\n              name=\"companyAddress\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Grad\"\n              name=\"companyTown\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.companyTown && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Telefon\"\n              name=\"companyPhone\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.companyPhone && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Adresa\"\n              name=\"companyFax\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Adresa\"\n              name=\"webAddress\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n          </div>\n        </div>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary btn-block mt-5\">\n        {translate('submit')}\n      </button>\n    </form>\n  );\n}\n\nRegisterForm.propTypes = {\n  onSubmit: PropTypes.func,\n  isPending: PropTypes.bool\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport config from 'config';\n\nexport function FacebookButton({ callback, disabled, children }) {\n  function handleOnCallback(response) {\n    callback(response, 'facebook');\n  }\n\n  return (\n    <FacebookLogin\n      appId={config.social.facebookAppId}\n      callback={handleOnCallback}\n      isDisabled={disabled}\n      render={({ onClick, isDisabled, isProcessing, isSdkLoaded }) => (\n        <button\n          onClick={onClick}\n          disabled={isDisabled || isProcessing || !isSdkLoaded}\n        >\n          {children}\n        </button>\n      )}\n    />\n  );\n}\n\nFacebookButton.propTypes = {\n  callback: PropTypes.func,\n  disabled: PropTypes.bool\n};\n\nexport default FacebookButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleLogin from 'react-google-login';\nimport config from 'config';\n\nexport function GoogleButton({ callback, disabled, children }) {\n  function handleResponse(response) {\n    callback(response, 'google');\n  }\n\n  return (\n    <GoogleLogin\n      clientId={config.social.googleClientId}\n      onSuccess={handleResponse}\n      onFailure={handleResponse}\n      cookiePolicy={'single_host_origin'}\n      disabled={disabled}\n      render={props => <button {...props}>{children}</button>}\n    />\n  );\n}\n\nGoogleButton.propTypes = {\n  callback: PropTypes.func,\n  disabled: PropTypes.bool\n};\n\nexport default GoogleButton;\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport request from 'utils/request';\nimport { setItem } from 'utils/localStorage';\nimport { DASHBOARD } from 'routes';\nimport { setToken, fetchAuthenticatedUser } from 'containers/App/actions';\nimport { socialAuthSuccess, socialAuthError } from './actions';\nimport { SOCIAL_AUTH_REQUEST } from './constants';\n\nexport function* socialAuthentication({ accessToken, provider }) {\n  try {\n    const { accessToken: token } = yield call(request, {\n      url: `/auth/social/${provider}`,\n      method: 'post',\n      data: {\n        accessToken\n      }\n    });\n    yield put(socialAuthSuccess());\n    yield call(setItem, 'token', token);\n    yield put(setToken(token));\n    yield put(fetchAuthenticatedUser());\n    yield put(push(DASHBOARD));\n  } catch (error) {\n    yield put(socialAuthError(error.data));\n  }\n}\n\nexport default function* registerSaga() {\n  yield takeLatest(SOCIAL_AUTH_REQUEST, socialAuthentication);\n}\n","import {\n  SOCIAL_AUTH_REQUEST,\n  SOCIAL_AUTH_SUCCESS,\n  SOCIAL_AUTH_ERROR\n} from './constants';\n\nexport function socialAuthentication(accessToken, provider) {\n  return {\n    type: SOCIAL_AUTH_REQUEST,\n    accessToken,\n    provider\n  };\n}\n\nexport function socialAuthSuccess() {\n  return {\n    type: SOCIAL_AUTH_SUCCESS\n  };\n}\n\nexport function socialAuthError(error) {\n  return {\n    type: SOCIAL_AUTH_ERROR,\n    error\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInjectReducer } from 'utils/injectReducer';\nimport { useInjectSaga } from 'utils/injectSaga';\nimport { makeSelectIsSocialAuthPending } from './selectors';\nimport { socialAuthentication } from './actions';\nimport FacebookButton from 'components/FacebookButton';\nimport GoogleButton from 'components/GoogleButton';\nimport reducer from './reducer';\nimport saga from './saga';\n\nconst key = 'socialAuth';\n\nfunction SocialAuth({ facebookButtonText, googleButtonText }) {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  const dispatch = useDispatch();\n  const isSocialAuthPending = useSelector(makeSelectIsSocialAuthPending());\n\n  function handleSocilaNetworkResponse(response, provider) {\n    if (response.accessToken) {\n      dispatch(socialAuthentication(response.accessToken, provider));\n    }\n  }\n\n  return (\n    <>\n      <FacebookButton\n        callback={handleSocilaNetworkResponse}\n        disabled={isSocialAuthPending}\n      >\n        {facebookButtonText}\n      </FacebookButton>\n      <GoogleButton\n        callback={handleSocilaNetworkResponse}\n        disabled={isSocialAuthPending}\n      >\n        {googleButtonText}\n      </GoogleButton>\n    </>\n  );\n}\n\nSocialAuth.propTypes = {\n  facebookButtonText: PropTypes.node,\n  googleButtonText: PropTypes.node\n};\n\nexport default SocialAuth;\n","export const REGISTER = '[Register]';\n\nexport const REGISTER_REQUEST = `${REGISTER} REGISTER_REQUEST`;\nexport const REGISTER_SUCCESS = `${REGISTER} REGISTER_SUCCESS`;\nexport const REGISTER_ERROR = `${REGISTER} REGISTER_ERROR`;\n","import produce from 'immer';\nimport {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_ERROR\n} from './constants';\n\nexport const initialState = {\n  isPending: false\n};\n\n/* eslint-disable default-case */\nconst registerReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case REGISTER_REQUEST:\n        draft.isPending = true;\n        break;\n      case REGISTER_SUCCESS:\n      case REGISTER_ERROR:\n        draft.isPending = false;\n        break;\n    }\n  });\n\nexport default registerReducer;\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectRegister = state => state.register || initialState;\n\nconst makeSelectIsRegisterPending = () =>\n  createSelector(\n    selectRegister,\n    substate => substate.isPending\n  );\n\nexport { makeSelectIsRegisterPending };\n","import {\n  REGISTER_REQUEST,\n  REGISTER_SUCCESS,\n  REGISTER_ERROR\n} from './constants';\n\nexport function register(firstName, lastName, email, password, setErrors) {\n  return {\n    type: REGISTER_REQUEST,\n    firstName,\n    lastName,\n    email,\n    password,\n    meta: {\n      setErrors\n    }\n  };\n}\n\nexport function registerSuccess() {\n  return {\n    type: REGISTER_SUCCESS\n  };\n}\n\nexport function registerError() {\n  return {\n    type: REGISTER_ERROR\n  };\n}\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport request from 'utils/request';\nimport parseApiErrorsToFormik from 'utils/parseApiErrorsToFormik';\nimport { setItem } from 'utils/localStorage';\nimport { DASHBOARD } from 'routes';\nimport { setToken, fetchAuthenticatedUser } from 'containers/App/actions';\nimport { registerSuccess, registerError } from './actions';\nimport { REGISTER_REQUEST } from './constants';\n\nexport function* register({\n  firstName: first_name,\n  lastName: last_name,\n  email,\n  password,\n  meta: { setErrors }\n}) {\n  try {\n    const { accessToken: token } = yield call(request, {\n      url: '/auth/register',\n      method: 'post',\n      data: {\n        first_name,\n        last_name,\n        email,\n        password\n      }\n    });\n    yield put(registerSuccess());\n    yield call(setItem, 'token', token);\n    yield put(setToken(token));\n    yield put(fetchAuthenticatedUser());\n    yield put(push(DASHBOARD));\n  } catch (error) {\n    if (error.status === 422) {\n      yield call(setErrors, parseApiErrorsToFormik(error.data.erorrs));\n    }\n    yield put(registerError());\n  }\n}\n\nexport default function* registerSaga() {\n  yield takeLatest(REGISTER_REQUEST, register);\n}\n","import { defineMessages } from 'react-intl';\n\nexport const scope = 'register_page';\n\nexport default defineMessages({\n  registerTitle: {\n    id: `${scope}.text.register_title`,\n    defaultMessage: 'Register'\n  },\n  registerButton: {\n    id: `${scope}.button.register`,\n    defaultMessage: 'Register'\n  },\n  loginLink: {\n    id: `${scope}.link.login`,\n    defaultMessage: 'Already have an account? Login'\n  },\n  facebookButton: {\n    id: `${scope}.button.facebook`,\n    defaultMessage: 'Register with Facebook'\n  },\n  googleButton: {\n    id: `${scope}.button.google`,\n    defaultMessage: 'Register with Google'\n  },\n  firstNameInputLabel: {\n    id: `${scope}.input_label.first_name`,\n    defaultMessage: 'First Name'\n  },\n  lastNameInputField: {\n    id: `${scope}.input_label.last_name`,\n    defaultMessage: 'Last Name'\n  },\n  emailInputLabel: {\n    id: `${scope}.input_label.email`,\n    defaultMessage: 'Email Address'\n  },\n  passwordInputLabel: {\n    id: `${scope}.input_label.password`,\n    defaultMessage: 'Password'\n  }\n});\n","import React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { useInjectReducer } from 'utils/injectReducer';\nimport { useInjectSaga } from 'utils/injectSaga';\nimport { makeSelectIsSocialAuthPending } from 'containers/SocialAuth/selectors';\nimport { makeSelectIsRegisterPending } from './selectors';\nimport { register } from './actions';\nimport SocialAuth from 'containers/SocialAuth';\nimport RegisterForm from './RegisterForm';\nimport reducer from './reducer';\nimport saga from './saga';\nimport messages from './messages';\nimport { LOGIN } from 'routes';\n\nconst key = 'register';\n\nfunction RegisterPage() {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  const dispatch = useDispatch();\n  const isRegisterPending = useSelector(makeSelectIsRegisterPending());\n  const isSocialAuthPending = useSelector(makeSelectIsSocialAuthPending());\n  const submitRegisterForm = useCallback(\n    (...args) => dispatch(register(...args)),\n    [dispatch]\n  );\n\n  const { formatMessage } = useIntl();\n\n  const renderPendingIndicator = <div>Please wait...</div>;\n\n  return (\n    <main>\n      <Helmet>\n        <title>Register - React Boilerplate</title>\n      </Helmet>\n      <h1>{formatMessage(messages.registerTitle)}</h1>\n      {!isSocialAuthPending ? (\n        <>\n          <SocialAuth\n            facebookButtonText={formatMessage(messages.facebookButton)}\n            googleButtonText={formatMessage(messages.googleButton)}\n          />\n\n          <RegisterForm\n            onSubmit={submitRegisterForm}\n            isPending={isRegisterPending}\n          />\n          <Link to={LOGIN}>{formatMessage(messages.loginLink)}</Link>\n        </>\n      ) : (\n        renderPendingIndicator\n      )}\n    </main>\n  );\n}\n\nexport default RegisterPage;\n"],"sourceRoot":""}