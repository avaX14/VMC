{"version":3,"sources":["utils/validations.js","containers/SocialAuth/constants.js","containers/SocialAuth/selectors.js","containers/SocialAuth/reducer.js","containers/RegisterPage/RegisterForm.js","components/FacebookButton/index.js","components/GoogleButton/index.js","containers/SocialAuth/saga.js","containers/SocialAuth/actions.js","containers/SocialAuth/index.js","containers/LoginPage/constants.js","containers/LoginPage/reducer.js","containers/LoginPage/selectors.js","containers/LoginPage/validations.js","containers/LoginPage/messages.js","components/FormField/FormField.js","containers/LoginPage/LoginForm.js","containers/LoginPage/saga.js","containers/LoginPage/actions.js","containers/LoginPage/index.js"],"names":["Yup","mixed","required","messages","oneOf","string","email","SOCIAL_AUTH","SOCIAL_AUTH_REQUEST","SOCIAL_AUTH_SUCCESS","SOCIAL_AUTH_ERROR","selectSocialAuth","state","socialAuth","initialState","makeSelectIsSocialAuthPending","createSelector","substate","isPending","socialAuthReducer","action","produce","draft","type","RegisterForm","useForm","register","handleSubmit","errors","console","log","onSubmit","data","className","translate","placeholder","name","ref","max","style","top","right","color","userName","maxLength","firstName","lastName","pattern","min","password","password2","companyName","companyTown","companyPhone","FacebookButton","callback","disabled","children","appId","config","social","facebookAppId","response","isDisabled","render","onClick","isProcessing","isSdkLoaded","GoogleButton","handleResponse","clientId","googleClientId","onSuccess","onFailure","cookiePolicy","props","socialAuthentication","registerSaga","accessToken","provider","call","request","url","method","token","put","setItem","setToken","fetchAuthenticatedUser","push","DASHBOARD","error","takeLatest","key","SocialAuth","facebookButtonText","googleButtonText","useInjectReducer","reducer","useInjectSaga","saga","dispatch","useDispatch","isSocialAuthPending","useSelector","handleSocilaNetworkResponse","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_ERROR","loginReducer","selectLogin","login","object","shape","scope","defineMessages","loginTitle","id","defaultMessage","loginButton","registerLink","forgotPasswordLink","facebookButton","googleButton","emailInputLabel","passwordInputLabel","unauthorized","FormField","label","onChange","e","LoginForm","useState","values","setValues","handleOnSubmit","target","value","useIntl","formatMessage","authorize","loginSaga","status","enqueueSnackbar","message","loginError","LoginPage","setLogin","isLoginPending","submitLoginForm","useCallback","to","FORGOT_PASSWORD"],"mappings":"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","file":"static/js/5.a51ffb28.chunk.js","sourcesContent":["import * as Yup from 'yup';\nimport messages from '../messages';\n\nYup.setLocale({\n  mixed: {\n    required: messages.required,\n    oneOf: messages.oneOf\n  },\n  string: {\n    email: messages.email\n  }\n});\n\nexport default Yup;\n","export const SOCIAL_AUTH = '[Social Authentication]';\n\nexport const SOCIAL_AUTH_REQUEST = `${SOCIAL_AUTH} SOCIAL_AUTH_REQUEST`;\nexport const SOCIAL_AUTH_SUCCESS = `${SOCIAL_AUTH} SOCIAL_AUTH_SUCCESS`;\nexport const SOCIAL_AUTH_ERROR = `${SOCIAL_AUTH} SOCIAL_AUTH_ERROR`;\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectSocialAuth = state => state.socialAuth || initialState;\n\nconst makeSelectIsSocialAuthPending = () =>\n  createSelector(\n    selectSocialAuth,\n    substate => substate.isPending\n  );\n\nexport { makeSelectIsSocialAuthPending };\n","import produce from 'immer';\nimport {\n  SOCIAL_AUTH_REQUEST,\n  SOCIAL_AUTH_SUCCESS,\n  SOCIAL_AUTH_ERROR\n} from './constants';\n\nexport const initialState = {\n  isPending: false\n};\n\n/* eslint-disable default-case */\nconst socialAuthReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case SOCIAL_AUTH_REQUEST:\n        draft.isPending = true;\n        break;\n      case SOCIAL_AUTH_SUCCESS:\n      case SOCIAL_AUTH_ERROR:\n        draft.isPending = false;\n        break;\n    }\n  });\n\nexport default socialAuthReducer;\n","import React from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport { red } from '@material-ui/core/colors';\nimport translate from 'i18n/translate';\n\nexport default function RegisterForm() {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => console.log(data);\n  console.log(errors);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"register-form\">\n        <div className=\"mr-5\">\n          <h3 className=\"mb-4\">{translate('contactData')}</h3>\n\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"User name\"\n              name=\"userName\"\n              ref={register({ required: true, max: 30 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.userName && (\n              <p className=\"error-message\">{translate('requiredField')}</p>\n            )}\n          </div>\n\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"First name\"\n              name=\"firstName\"\n              ref={register({ required: true, maxLength: 80 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.firstName && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Last name\"\n              name=\"lastName\"\n              ref={register({ required: true, maxLength: 100 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.lastName && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Email\"\n              name=\"email\"\n              ref={register({ required: true, pattern: /^\\S+@\\S+$/i })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.email && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Password\"\n              name=\"password\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.password && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"Confirm password\"\n              name=\"password2\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.password2 && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"tel\"\n              placeholder=\"Mobile number\"\n              name=\"Mobile number\"\n              ref={register({ maxLength: 15 })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Title\"\n              name=\"Title\"\n              ref={register}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Position\"\n              name=\"Position\"\n              ref={register({ max: 40 })}\n            />\n          </div>\n        </div>\n\n        <div className=\"verticalLine\"></div>\n\n        <div className=\"company-info ml-5\">\n          <h3 className=\"mb-4\">{translate('companyData')}</h3>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Ime kompanije\"\n              name=\"companyName\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.companyName && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Adresa\"\n              name=\"companyAddress\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Grad\"\n              name=\"companyTown\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.companyTown && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group position-relative\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Telefon\"\n              name=\"companyPhone\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n            <span\n              className=\"position-absolute\"\n              style={{ top: '0', right: '5px', color: 'red' }}\n            >\n              *\n            </span>\n            {errors.companyPhone && (\n              <p className=\"error-message\">Your input is required</p>\n            )}\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Adresa\"\n              name=\"companyFax\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n          </div>\n          <div className=\"form-group\">\n            <input\n              className=\"form-control\"\n              type=\"text\"\n              placeholder=\"Adresa\"\n              name=\"webAddress\"\n              ref={register({ required: true, max: 20, min: 6 })}\n            />\n          </div>\n        </div>\n      </div>\n\n      <button type=\"submit\" className=\"btn btn-primary btn-block mt-5\">\n        {translate('submit')}\n      </button>\n    </form>\n  );\n}\n\nRegisterForm.propTypes = {\n  onSubmit: PropTypes.func,\n  isPending: PropTypes.bool\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props';\nimport config from 'config';\n\nexport function FacebookButton({ callback, disabled, children }) {\n  function handleOnCallback(response) {\n    callback(response, 'facebook');\n  }\n\n  return (\n    <FacebookLogin\n      appId={config.social.facebookAppId}\n      callback={handleOnCallback}\n      isDisabled={disabled}\n      render={({ onClick, isDisabled, isProcessing, isSdkLoaded }) => (\n        <button\n          onClick={onClick}\n          disabled={isDisabled || isProcessing || !isSdkLoaded}\n        >\n          {children}\n        </button>\n      )}\n    />\n  );\n}\n\nFacebookButton.propTypes = {\n  callback: PropTypes.func,\n  disabled: PropTypes.bool\n};\n\nexport default FacebookButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport GoogleLogin from 'react-google-login';\nimport config from 'config';\n\nexport function GoogleButton({ callback, disabled, children }) {\n  function handleResponse(response) {\n    callback(response, 'google');\n  }\n\n  return (\n    <GoogleLogin\n      clientId={config.social.googleClientId}\n      onSuccess={handleResponse}\n      onFailure={handleResponse}\n      cookiePolicy={'single_host_origin'}\n      disabled={disabled}\n      render={props => <button {...props}>{children}</button>}\n    />\n  );\n}\n\nGoogleButton.propTypes = {\n  callback: PropTypes.func,\n  disabled: PropTypes.bool\n};\n\nexport default GoogleButton;\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport request from 'utils/request';\nimport { setItem } from 'utils/localStorage';\nimport { DASHBOARD } from 'routes';\nimport { setToken, fetchAuthenticatedUser } from 'containers/App/actions';\nimport { socialAuthSuccess, socialAuthError } from './actions';\nimport { SOCIAL_AUTH_REQUEST } from './constants';\n\nexport function* socialAuthentication({ accessToken, provider }) {\n  try {\n    const { accessToken: token } = yield call(request, {\n      url: `/auth/social/${provider}`,\n      method: 'post',\n      data: {\n        accessToken\n      }\n    });\n    yield put(socialAuthSuccess());\n    yield call(setItem, 'token', token);\n    yield put(setToken(token));\n    yield put(fetchAuthenticatedUser());\n    yield put(push(DASHBOARD));\n  } catch (error) {\n    yield put(socialAuthError(error.data));\n  }\n}\n\nexport default function* registerSaga() {\n  yield takeLatest(SOCIAL_AUTH_REQUEST, socialAuthentication);\n}\n","import {\n  SOCIAL_AUTH_REQUEST,\n  SOCIAL_AUTH_SUCCESS,\n  SOCIAL_AUTH_ERROR\n} from './constants';\n\nexport function socialAuthentication(accessToken, provider) {\n  return {\n    type: SOCIAL_AUTH_REQUEST,\n    accessToken,\n    provider\n  };\n}\n\nexport function socialAuthSuccess() {\n  return {\n    type: SOCIAL_AUTH_SUCCESS\n  };\n}\n\nexport function socialAuthError(error) {\n  return {\n    type: SOCIAL_AUTH_ERROR,\n    error\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useInjectReducer } from 'utils/injectReducer';\nimport { useInjectSaga } from 'utils/injectSaga';\nimport { makeSelectIsSocialAuthPending } from './selectors';\nimport { socialAuthentication } from './actions';\nimport FacebookButton from 'components/FacebookButton';\nimport GoogleButton from 'components/GoogleButton';\nimport reducer from './reducer';\nimport saga from './saga';\n\nconst key = 'socialAuth';\n\nfunction SocialAuth({ facebookButtonText, googleButtonText }) {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  const dispatch = useDispatch();\n  const isSocialAuthPending = useSelector(makeSelectIsSocialAuthPending());\n\n  function handleSocilaNetworkResponse(response, provider) {\n    if (response.accessToken) {\n      dispatch(socialAuthentication(response.accessToken, provider));\n    }\n  }\n\n  return (\n    <>\n      <FacebookButton\n        callback={handleSocilaNetworkResponse}\n        disabled={isSocialAuthPending}\n      >\n        {facebookButtonText}\n      </FacebookButton>\n      <GoogleButton\n        callback={handleSocilaNetworkResponse}\n        disabled={isSocialAuthPending}\n      >\n        {googleButtonText}\n      </GoogleButton>\n    </>\n  );\n}\n\nSocialAuth.propTypes = {\n  facebookButtonText: PropTypes.node,\n  googleButtonText: PropTypes.node\n};\n\nexport default SocialAuth;\n","export const LOGIN = '[Login]';\n\nexport const LOGIN_REQUEST = `${LOGIN} LOGIN_REQUEST`;\nexport const LOGIN_SUCCESS = `${LOGIN} LOGIN_SUCCESS`;\nexport const LOGIN_ERROR = `${LOGIN} LOGIN_ERROR`;\n","import produce from 'immer';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_ERROR } from './constants';\n\nexport const initialState = {\n  isPending: false\n};\n\n/* eslint-disable default-case */\nconst loginReducer = (state = initialState, action) =>\n  produce(state, draft => {\n    switch (action.type) {\n      case LOGIN_REQUEST:\n        draft.isPending = true;\n        break;\n      case LOGIN_SUCCESS:\n      case LOGIN_ERROR:\n        draft.isPending = false;\n        break;\n    }\n  });\n\nexport default loginReducer;\n","import { createSelector } from 'reselect';\nimport { initialState } from './reducer';\n\nconst selectLogin = state => state.login || initialState;\n\nconst makeSelectIsLoginPending = () =>\n  createSelector(\n    selectLogin,\n    substate => substate.isPending\n  );\n\nexport { makeSelectIsLoginPending };\n","import Yup from 'utils/validations';\n\nexport const loginSchema = Yup.object().shape({\n  email: Yup.string()\n    .email()\n    .required(),\n  password: Yup.string().required()\n});\n","import { defineMessages } from 'react-intl';\n\nexport const scope = 'login_page';\n\nexport default defineMessages({\n  loginTitle: {\n    id: `${scope}.text.login_title`,\n    defaultMessage: 'Login'\n  },\n  loginButton: {\n    id: `${scope}.button.login`,\n    defaultMessage: 'Login'\n  },\n  registerLink: {\n    id: `${scope}.link.register`,\n    defaultMessage: `Don't have an account? Register`\n  },\n  forgotPasswordLink: {\n    id: `${scope}.text.forgot_password`,\n    defaultMessage: 'Forgot password?'\n  },\n  facebookButton: {\n    id: `${scope}.button.facebook`,\n    defaultMessage: 'Login with Facebook'\n  },\n  googleButton: {\n    id: `${scope}.button.google`,\n    defaultMessage: 'Login with Google'\n  },\n  emailInputLabel: {\n    id: `${scope}.input_label.email`,\n    defaultMessage: 'Email Address'\n  },\n  passwordInputLabel: {\n    id: `${scope}.input_label.password`,\n    defaultMessage: 'Password'\n  },\n  unauthorized: {\n    id: `${scope}.unauthorized`,\n    defaultMessage: 'Unauthorized'\n  }\n});\n","import React from 'react';\nimport translate from 'i18n/translate';\n\nconst FormField = ({ name, type, label, placeholder, onChange }) => {\n  return (\n    <div className=\"form-group\">\n      <label>{label}</label>\n      <input\n        id={name}\n        type={type}\n        className=\"form-control\"\n        onChange={e => onChange(e)}\n      />\n    </div>\n  );\n};\n\nexport default FormField;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { loginSchema } from './validations';\nimport messages from './messages';\nimport translate from 'i18n/translate';\nimport FormField from 'components/FormField/FormField';\n\nexport default function LoginForm({ onSubmit, isPending }) {\n  const [values, setValues] = useState({ email: '', password: '' });\n\n  const handleOnSubmit = () => {\n    console.log(values);\n    const { email, password } = values;\n    onSubmit(email, password);\n  };\n\n  const onChange = e => {\n    console.log(e);\n    const { id, value } = e.target;\n    console.log(id, value);\n    setValues({\n      ...values,\n      [id]: value\n    });\n  };\n\n  const { formatMessage } = useIntl();\n\n  return (\n    <form onSubmit={() => handleOnSubmit()}>\n      <h2 className=\"mb-3\">Login</h2>\n\n      <FormField\n        name=\"email\"\n        type=\"email\"\n        label={translate('emailAddress')}\n        onChange={onChange}\n      ></FormField>\n\n      <FormField\n        name=\"password\"\n        type=\"password\"\n        label={translate('password')}\n        onChange={onChange}\n      ></FormField>\n\n      <button type=\"submit\" className=\"btn btn-primary btn-block mt-5\">\n        {translate('submit')}\n      </button>\n      {/* <label className=\"forgot-password text-right\">Forgot password?</label> */}\n    </form>\n  );\n}\n\nLoginForm.propTypes = {\n  onSubmit: PropTypes.func,\n  isPending: PropTypes.bool\n};\n","import { takeLatest, call, put } from 'redux-saga/effects';\nimport { push } from 'connected-react-router';\nimport request from 'utils/request';\nimport { setItem } from 'utils/localStorage';\nimport { enqueueSnackbar } from 'containers/Notifier/actions';\nimport { DASHBOARD } from 'routes';\nimport { setToken, fetchAuthenticatedUser } from 'containers/App/actions';\nimport { loginSuccess, loginError } from './actions';\nimport { LOGIN_REQUEST } from './constants';\nimport messages from './messages';\n\nexport function* authorize({ email, password }) {\n  try {\n    const { accessToken: token } = yield call(request, {\n      url: '/auth/login',\n      method: 'post',\n      data: { email, password }\n    });\n    yield put(loginSuccess());\n    yield call(setItem, 'token', token);\n    yield put(setToken(token));\n    yield put(fetchAuthenticatedUser());\n    yield put(push(DASHBOARD));\n  } catch (error) {\n    if (error.status === 401) {\n      yield put(\n        enqueueSnackbar({\n          message: messages.unauthorized\n        })\n      );\n    }\n    yield put(loginError());\n  }\n}\n\nexport default function* loginSaga() {\n  yield takeLatest(LOGIN_REQUEST, authorize);\n}\n","import { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_ERROR } from './constants';\n\nexport function login(email, password, setErrors) {\n  return {\n    type: LOGIN_REQUEST,\n    email,\n    password,\n    meta: {\n      setErrors\n    }\n  };\n}\n\nexport function loginSuccess() {\n  return {\n    type: LOGIN_SUCCESS\n  };\n}\n\nexport function loginError(error) {\n  return {\n    type: LOGIN_ERROR,\n    error\n  };\n}\n","import React, { useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet-async';\nimport { useIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { useInjectReducer } from 'utils/injectReducer';\nimport { useInjectSaga } from 'utils/injectSaga';\nimport { makeSelectIsSocialAuthPending } from 'containers/SocialAuth/selectors';\nimport { makeSelectIsLoginPending } from './selectors';\nimport { login } from './actions';\nimport SocialAuth from 'containers/SocialAuth';\nimport LoginForm from './LoginForm';\nimport reducer from './reducer';\nimport saga from './saga';\nimport messages from './messages';\nimport { REGISTER, FORGOT_PASSWORD, LOGIN } from 'routes';\nimport translate from 'i18n/translate';\nimport RegisterForm from 'containers/RegisterPage/RegisterForm';\n\nconst key = 'login';\n\nfunction LoginPage() {\n  useInjectReducer({ key, reducer });\n  useInjectSaga({ key, saga });\n\n  const [login, setLogin] = useState(true);\n  const dispatch = useDispatch();\n  const isLoginPending = useSelector(makeSelectIsLoginPending());\n  const isSocialAuthPending = useSelector(makeSelectIsSocialAuthPending());\n  const submitLoginForm = useCallback((...args) => dispatch(login(...args)), [\n    dispatch\n  ]);\n\n  const { formatMessage } = useIntl();\n\n  const renderPendingIndicator = <div>Please wait...</div>;\n\n  return (\n    <div>\n      {login ? (\n        <div className=\"login-panel\">\n          <LoginForm onSubmit={submitLoginForm} isPending={isLoginPending} />\n          <Link to={FORGOT_PASSWORD}></Link>\n          <br />\n          <label\n            className=\"register-btn text-uppercase\"\n            onClick={() => {\n              setLogin(false);\n            }}\n          >\n            {translate('register')}\n          </label>\n        </div>\n      ) : (\n        <div className=\"register-panel\">\n          <RegisterForm onSubmit={submitLoginForm} isPending={isLoginPending} />\n          <Link to={FORGOT_PASSWORD}></Link>\n          <label\n            className=\"login-btn text-uppercase\"\n            onClick={() => {\n              setLogin(true);\n            }}\n          >\n            {translate('login')}\n          </label>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default LoginPage;\n"],"sourceRoot":""}